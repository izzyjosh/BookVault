"""initial migration

Revision ID: 0098f8cac101
Revises: 
Create Date: 2024-10-18 11:05:21.824313

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0098f8cac101"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_category_id"), "category", ["id"], unique=False)
    op.create_table(
        "genre",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_genre_id"), "genre", ["id"], unique=False)
    op.create_table(
        "user",
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("first_name", sa.String(length=30), nullable=True),
        sa.Column("last_name", sa.String(length=30), nullable=True),
        sa.Column("reg_number", sa.String(length=40), nullable=True),
        sa.Column("email", sa.String(length=225), nullable=False),
        sa.Column("password", sa.String(length=1024), nullable=False),
        sa.Column("bio", sa.String(length=1024), nullable=True),
        sa.Column(
            "role", sa.Enum("admin", "liberian", "member", name="role"), nullable=False
        ),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=False)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=False)
    op.create_table(
        "access_token",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("token", sa.String(length=2048), nullable=False),
        sa.Column("expiry_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("blacklisted", sa.Boolean(), server_default="false", nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_access_token_id"), "access_token", ["id"], unique=False)
    op.create_table(
        "book",
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("author", sa.String(length=50), nullable=False),
        sa.Column("publisher", sa.String(length=100), nullable=False),
        sa.Column("image", sa.String(length=1024), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("isbn", sa.String(), nullable=False),
        sa.Column("category_id", sa.String(), nullable=False),
        sa.Column("copies_available", sa.Integer(), nullable=False),
        sa.Column("total_copies", sa.Integer(), nullable=False),
        sa.Column("borrowers", sa.ARRAY(sa.JSON()), nullable=True),
        sa.Column("history", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("fine_details", sa.JSON(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("isbn"),
    )
    op.create_index(op.f("ix_book_id"), "book", ["id"], unique=False)
    op.create_index(op.f("ix_book_title"), "book", ["title"], unique=True)
    op.create_table(
        "otp",
        sa.Column("code", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_index(op.f("ix_otp_id"), "otp", ["id"], unique=False)
    op.create_table(
        "bookUserAssociation",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["book.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "book_id"),
    )
    op.create_table(
        "genreAssociation",
        sa.Column("genre_id", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["book.id"],
        ),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genre.id"],
        ),
        sa.PrimaryKeyConstraint("genre_id", "book_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("genreAssociation")
    op.drop_table("bookUserAssociation")
    op.drop_index(op.f("ix_otp_id"), table_name="otp")
    op.drop_table("otp")
    op.drop_index(op.f("ix_book_title"), table_name="book")
    op.drop_index(op.f("ix_book_id"), table_name="book")
    op.drop_table("book")
    op.drop_index(op.f("ix_access_token_id"), table_name="access_token")
    op.drop_table("access_token")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_genre_id"), table_name="genre")
    op.drop_table("genre")
    op.drop_index(op.f("ix_category_id"), table_name="category")
    op.drop_table("category")
    # ### end Alembic commands ###
